name: Deploy Backend
on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      #자바 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      # Gradle wrapper 파일 실행 권한주기
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

      # Docker 로그인
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드
      - run: docker build -t gyungku/topster-backend -f Dockerfile . # Docerfile로 이미지 생성
      - run: docker build -t gyungku/topster-redis -f ./redis/Dockerfile .
      - run: docker build -t gyungku/topster-nginx -f ./nginx/Dockerfile .
      - run: docker build -t gyungku/topster-mysql -f ./mysql/Dockerfile .

      # Docker Hub에 이미지 push
      - run: docker push gyungku/topster-backend
      - run: docker push gyungku/topster-redis
      - run: docker push gyungku/topster-nginx
      - run: docker push gyungku/topster-mysql

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      # elastic beanstalk에 배포
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: topster # elastic beanstalk의 어플리케이션 이름
          environment_name: Topster-env # elastic beanstalk의 환경이름
          existing_bucket_name: ${{ secrets.S3_BEANSTALK_BUCKET_NAME }} # s3의 bucket name
          region: ap-northeast-2 # 지역, 위의 지역을 넣자
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip